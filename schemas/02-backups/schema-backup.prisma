// =====================================================================================
// SCHEMA PRISMA COMPLETO ORPHANET - SISTEMA BRASILEIRO DE DOENÇAS RARAS
// =====================================================================================
// Baseado na estrutura completa do Orphanet (www.orphanet.org)
// Inclui todas as classificações, linearizações e mapeamentos
// =====================================================================================

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// =====================================================================================
// 1. NOMENCLATURA ORPHANET (Estrutura Base)
// =====================================================================================

model OrphaDisease {
  // Identificação Orphanet
  id                    String    @id @default(uuid())
  orphaNumber           String    @unique @map("orpha_number")       // Ex: "ORPHA:558"
  orphaCode             String    @unique @map("orpha_code")         // Ex: "558"
  
  // Nomes multilíngues
  preferredNameEn       String    @map("preferred_name_en")
  preferredNamePt       String?   @map("preferred_name_pt")
  synonymsEn            String?   // JSON array
  synonymsPt            String?   // JSON array
  
  // Classificação hierárquica
  parentId              String?   @map("parent_id")
  parent                OrphaDisease? @relation("DiseaseHierarchy", fields: [parentId], references: [id])
  children              OrphaDisease[] @relation("DiseaseHierarchy")
  
  // Tipo de entidade
  entityType            String    @map("entity_type")               // Disease, Group, Subtype, etc.
  classificationLevel   Int?      @map("classification_level")     // Nível na hierarquia
  
  // Status e datas
  dateCreated           String?   @map("date_created")
  dateModified          String?   @map("date_modified")
  expertLink            String?   @map("expert_link")
  isActiveDisease       Boolean   @default(true) @map("is_active_disease")
  isObsolete            Boolean   @default(false) @map("is_obsolete")
  
  // Metadata
  createdAt             DateTime  @default(now()) @map("created_at")
  updatedAt             DateTime  @updatedAt @map("updated_at")
  
  // Relacionamentos
  linearisations        OrphaLinearisation[]
  externalMappings      OrphaExternalMapping[]
  clinicalSigns         OrphaClinicalSign[]
  phenotypes            OrphaPhenotype[]
  genes                 OrphaGeneAssociation[]
  naturalHistory        OrphaNaturalHistory[]
  epidemiology          OrphaEpidemiology[]
  epidemiologyCPLP      OrphaCPLPEpidemiology[]
  classifications       OrphaMedicalClassification[]
  textualInformation    OrphaTextualInformation[]
  hpoPhenotypeAssociations HPOPhenotypeAssociation[]
  
  @@map("orpha_diseases")
}

// =====================================================================================
// 2. LINEARIZAÇÃO ORPHANET (Classificação Clínica)
// =====================================================================================

model OrphaLinearisation {
  id                    String        @id @default(uuid())
  orphaDiseaseId        String        @map("orpha_disease_id")
  disease               OrphaDisease  @relation(fields: [orphaDiseaseId], references: [id], onDelete: Cascade)
  
  // Identificadores de linearização
  linearisationId       String        @map("linearisation_id")
  linearisationCode     String        @map("linearisation_code")
  
  // Hierarquia da linearização
  parentLinearisationId String?       @map("parent_linearisation_id")
  parent                OrphaLinearisation? @relation("LinearisationHierarchy", fields: [parentLinearisationId], references: [id])
  children              OrphaLinearisation[] @relation("LinearisationHierarchy")
  
  // Classificação
  preferredNameEn       String        @map("preferred_name_en")
  preferredNamePt       String?       @map("preferred_name_pt")
  classificationLevel   Int           @map("classification_level")
  
  // Tipo de classificação
  classificationType    String        @map("classification_type")    // Clinical, Etiological, etc.
  
  @@map("orpha_linearisations")
}

// =====================================================================================
// 3. MAPEAMENTOS EXTERNOS (ICD-10, ICD-11, OMIM, etc.)
// =====================================================================================

model OrphaExternalMapping {
  id                    String        @id @default(uuid())
  orphaDiseaseId        String        @map("orpha_disease_id")
  disease               OrphaDisease  @relation(fields: [orphaDiseaseId], references: [id], onDelete: Cascade)
  
  // Sistema de nomenclatura externa
  sourceSystem          String        @map("source_system")          // ICD10, ICD11, OMIM, UMLS, etc.
  sourceSystemVersion   String?       @map("source_system_version")
  
  // Códigos e mapeamentos
  sourceCode            String        @map("source_code")
  sourceName            String        @map("source_name")
  
  // Tipo de mapeamento
  mappingType           String        @map("mapping_type")           // Exact, Broader, Narrower, etc.
  mappingFlag           String?       @map("mapping_flag")           // NTBT, BTNT, etc.
  mappingApprovalStatus String?       @map("mapping_approval_status")
  
  // Metadados
  validationStatus      String?       @map("validation_status")
  lastUpdated           String?       @map("last_updated")
  
  @@map("orpha_external_mappings")
}

// =====================================================================================
// 4. CLASSIFICAÇÕES MÉDICAS POR ESPECIALIDADE
// =====================================================================================

model OrphaMedicalClassification {
  id                    String        @id @default(uuid())
  orphaDiseaseId        String        @map("orpha_disease_id")
  disease               OrphaDisease  @relation(fields: [orphaDiseaseId], references: [id], onDelete: Cascade)
  
  // Especialidade médica
  medicalSpecialty      String        @map("medical_specialty")      // Neurology, Cardiology, etc.
  specialtyCode         String?       @map("specialty_code")
  
  // Classificação na especialidade
  classificationName    String        @map("classification_name")
  classificationLevel   Int?          @map("classification_level")
  
  // Hierarquia na especialidade
  parentId              String?       @map("parent_id")
  parent                OrphaMedicalClassification? @relation("SpecialtyHierarchy", fields: [parentId], references: [id])
  children              OrphaMedicalClassification[] @relation("SpecialtyHierarchy")
  
  @@map("orpha_medical_classifications")
}

// =====================================================================================
// 5. FENÓTIPOS (HPO - Human Phenotype Ontology)
// =====================================================================================

model OrphaPhenotype {
  id                    String        @id @default(uuid())
  orphaDiseaseId        String        @map("orpha_disease_id")
  disease               OrphaDisease  @relation(fields: [orphaDiseaseId], references: [id], onDelete: Cascade)
  
  // Identificação HPO
  hpoId                 String        @map("hpo_id")                 // Ex: "HP:0000252"
  hpoTerm               String        @map("hpo_term")
  
  // Frequência do fenótipo
  frequencyHpoId        String?       @map("frequency_hpo_id")       // Ex: "HP:0040283"
  frequencyTerm         String?       @map("frequency_term")         // Ex: "Occasional"
  frequencyValue        String?       @map("frequency_value")        // Ex: "5-29%"
  
  // Critério diagnóstico
  diagnosticCriteria    String?       @map("diagnostic_criteria")    // Pathognomonic, Major, Minor
  
  @@map("orpha_phenotypes")
}

// =====================================================================================
// 6. SINAIS CLÍNICOS
// =====================================================================================

model OrphaClinicalSign {
  id                    String        @id @default(uuid())
  orphaDiseaseId        String        @map("orpha_disease_id")
  disease               OrphaDisease  @relation(fields: [orphaDiseaseId], references: [id], onDelete: Cascade)
  
  // Sinal clínico
  signName              String        @map("sign_name")
  signNamePt            String?       @map("sign_name_pt")
  
  // Frequência
  frequency             String?       // Obrigatório, Frequente, Ocasional, etc.
  frequencyValue        String?       @map("frequency_value")
  
  // Categoria do sinal
  signCategory          String?       @map("sign_category")
  
  @@map("orpha_clinical_signs")
}

// =====================================================================================
// 7. ASSOCIAÇÕES GENÉTICAS
// =====================================================================================

model OrphaGeneAssociation {
  id                    String        @id @default(uuid())
  orphaDiseaseId        String        @map("orpha_disease_id")
  disease               OrphaDisease  @relation(fields: [orphaDiseaseId], references: [id], onDelete: Cascade)
  
  // Identificação do gene
  geneSymbol            String        @map("gene_symbol")            // Ex: "CFTR"
  geneName              String?       @map("gene_name")
  
  // IDs de referência
  hgncId                String?       @map("hgnc_id")
  entrezGeneId          String?       @map("entrez_gene_id")
  ensemblGeneId         String?       @map("ensembl_gene_id")
  omimGeneId            String?       @map("omim_gene_id")
  
  // Tipo de associação
  associationType       String        @map("association_type")       // Disease-causing, Major susceptibility, etc.
  associationStatus     String?       @map("association_status")
  
  // Herança
  inheritancePattern    String?       @map("inheritance_pattern")
  
  @@map("orpha_gene_associations")
}

// =====================================================================================
// 8. HISTÓRIA NATURAL DA DOENÇA
// =====================================================================================

model OrphaNaturalHistory {
  id                    String        @id @default(uuid())
  orphaDiseaseId        String        @map("orpha_disease_id")
  disease               OrphaDisease  @relation(fields: [orphaDiseaseId], references: [id], onDelete: Cascade)
  
  // Idade de início
  ageOfOnset            String?       @map("age_of_onset")
  ageOfOnsetHpoId       String?       @map("age_of_onset_hpo_id")
  
  // Idade de óbito
  ageOfDeath            String?       @map("age_of_death")
  ageOfDeathHpoId       String?       @map("age_of_death_hpo_id")
  
  // Características
  lifeExpectancy        String?       @map("life_expectancy")
  prognosis             String?
  severity              String?
  
  // Evolução
  courseOfDisease       String?       @map("course_of_disease")
  
  @@map("orpha_natural_history")
}

// =====================================================================================
// 9. DADOS EPIDEMIOLÓGICOS
// =====================================================================================

model OrphaEpidemiology {
  id                    String        @id @default(uuid())
  orphaDiseaseId        String        @map("orpha_disease_id")
  disease               OrphaDisease  @relation(fields: [orphaDiseaseId], references: [id], onDelete: Cascade)
  
  // Prevalência
  prevalenceClass       String?       @map("prevalence_class")       // <1/1000000, 1-5/10000, etc.
  prevalenceValue       String?       @map("prevalence_value")
  prevalenceType        String?       @map("prevalence_type")        // Point, Birth, etc.
  
  // População
  populationType        String?       @map("population_type")        // General population, Specific population
  populationDescription String?       @map("population_description")
  
  // Localização geográfica
  geographicArea        String?       @map("geographic_area")
  
  // Fonte dos dados
  dataSource            String?       @map("data_source")
  validationStatus      String?       @map("validation_status")
  
  @@map("orpha_epidemiology")
}

// =====================================================================================
// 10. INFORMAÇÕES TEXTUAIS (Definições, Descrições, etc.)
// =====================================================================================

model OrphaTextualInformation {
  id                    String        @id @default(uuid())
  orphaDiseaseId        String        @map("orpha_disease_id")
  disease               OrphaDisease  @relation(fields: [orphaDiseaseId], references: [id], onDelete: Cascade)
  
  // Tipo de texto
  textSection           String        @map("text_section")           // Definition, Description, etc.
  textSectionCode       String?       @map("text_section_code")
  
  // Conteúdo
  textEn                String?       @map("text_en")
  textPt                String?       @map("text_pt")
  
  // Metadados
  lastUpdate            String?       @map("last_update")
  validationStatus      String?       @map("validation_status")
  
  @@map("orpha_textual_information")
}

// =====================================================================================
// 11. DADOS ESPECÍFICOS PARA PAÍSES CPLP
// =====================================================================================

model CPLPCountry {
  id                    Int           @id @default(autoincrement())
  code                  String        @unique
  name                  String
  namePt                String        @map("name_pt")
  flagEmoji             String?       @map("flag_emoji")
  population            BigInt?
  language              String        @default("pt")
  
  // Sistema de saúde
  healthcareSystem      String?       @map("healthcare_system")
  rareDiseasePolicy     String?       @map("rare_disease_policy")
  orphanDrugPolicy      String?       @map("orphan_drug_policy")
  
  // Dados epidemiológicos locais
  epidemiologyData      OrphaCPLPEpidemiology[]
  
  createdAt             DateTime      @default(now()) @map("created_at")
  
  @@map("cplp_countries")
}

model OrphaCPLPEpidemiology {
  id                    String        @id @default(uuid())
  orphaDiseaseId        String        @map("orpha_disease_id")
  disease               OrphaDisease  @relation(fields: [orphaDiseaseId], references: [id], onDelete: Cascade)
  countryId             Int           @map("country_id")
  country               CPLPCountry   @relation(fields: [countryId], references: [id])
  
  // Dados epidemiológicos específicos do país
  estimatedCases        Int?          @map("estimated_cases")
  prevalencePer100k     Float?        @map("prevalence_per_100k")
  incidencePer100k      Float?        @map("incidence_per_100k")
  
  // Fonte e qualidade dos dados
  dataSource            String?       @map("data_source")
  dataQuality           String?       @map("data_quality")
  collectionYear        Int?          @map("collection_year")
  
  // Metadados
  notes                 String?
  createdAt             DateTime      @default(now()) @map("created_at")
  updatedAt             DateTime      @updatedAt @map("updated_at")
  
  @@map("orpha_cplp_epidemiology")
}

// =====================================================================================
// 12. SISTEMA DE AUDITORIA E LOGS
// =====================================================================================

model OrphaImportLog {
  id                    String        @id @default(uuid())
  
  // Dados da importação
  importType            String        @map("import_type")            // nomenclature, phenotypes, etc.
  sourceUrl             String?       @map("source_url")
  sourceFile            String?       @map("source_file")
  
  // Status da importação
  status                String        // pending, running, completed, failed
  recordsProcessed      Int?          @map("records_processed")
  recordsSucceeded      Int?          @map("records_succeeded")
  recordsFailed         Int?          @map("records_failed")
  
  // Detalhes
  errorMessages         String?       @map("error_messages")         // JSON array
  importSummary         String?       @map("import_summary")         // JSON object
  
  // Timestamps
  startedAt             DateTime?     @map("started_at")
  completedAt           DateTime?     @map("completed_at")
  createdAt             DateTime      @default(now()) @map("created_at")
  
  @@map("orpha_import_logs")
}

// =====================================================================================
// 13. HPO (HUMAN PHENOTYPE ONTOLOGY) INTEGRATION
// =====================================================================================

model HPOTerm {
  id String @id @default(cuid())
  
  // Identificadores HPO
  hpoId String @unique      // HP:0000001
  hpoCode String           // 0000001 (sem prefixo)
  
  // Names and descriptions
  name String              // Nome principal do termo HPO
  definition String?       // Definição do termo
  comment String?          // Comentários adicionais
  
  // Hierarquia
  parentTerms String?      // JSON array de termos pais
  childTerms String?       // JSON array de termos filhos
  
  // Sinônimos
  exactSynonyms String?    // JSON array de sinônimos exatos
  broadSynonyms String?    // JSON array de sinônimos amplos
  narrowSynonyms String?   // JSON array de sinônimos específicos
  relatedSynonyms String?  // JSON array de sinônimos relacionados
  
  // Metadata
  isObsolete Boolean @default(false)
  replacedBy String?       // HPO ID que substitui este termo
  
  // Cross-references
  xrefs String?           // JSON array de cross-references (UMLS, SNOMED, etc.)
  
  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relacionamentos
  phenotypeAssociations HPOPhenotypeAssociation[]
  geneAssociations HPOGeneAssociation[]
  diseaseAssociations HPODiseaseAssociation[]
  
  @@map("hpo_terms")
}

model HPOPhenotypeAssociation {
  id String @id @default(cuid())
  
  // Relacionamento com doença Orphanet
  orphaDiseaseId String
  orphaDisease OrphaDisease @relation(fields: [orphaDiseaseId], references: [id])
  
  // Relacionamento com termo HPO
  hpoTermId String
  hpoTerm HPOTerm @relation(fields: [hpoTermId], references: [id])
  
  // Frequência do fenótipo
  frequencyHPO String?     // HP:0040280 (Obligate), etc.
  frequencyTerm String?    // "Obligate", "Very frequent", etc.
  frequencyNumeric Float?  // 0.8 = 80%
  
  // Onset age
  onsetHPO String?         // HP:0003577 (Congenital), etc.
  onsetTerm String?        // "Congenital onset", etc.
  
  // Clinical modifiers
  severity String?         // Mild, Moderate, Severe
  clinicalModifiers String? // JSON array de modificadores
  
  // Evidence
  evidence String?         // PCS (Published clinical study), etc.
  reference String?        // PMID, DOI, etc.
  
  // Metadata
  frequency String?        // Frequência textual original
  qualifier String?        // NOT se for negação
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([orphaDiseaseId, hpoTermId])
  @@map("hpo_phenotype_associations")
}

model HPOGeneAssociation {
  id String @id @default(cuid())
  
  // Gene information
  geneSymbol String        // BRCA1, TP53, etc.
  geneId String?           // Entrez Gene ID
  ensemblId String?        // ENSG00000012048
  
  // HPO term
  hpoTermId String
  hpoTerm HPOTerm @relation(fields: [hpoTermId], references: [id])
  
  // Association details
  associationType String?  // "phenotype", "disease-gene", etc.
  evidence String?         // Evidence code
  reference String?        // Publication reference
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([geneSymbol, hpoTermId])
  @@map("hpo_gene_associations")
}

model HPODiseaseAssociation {
  id String @id @default(cuid())
  
  // Disease identifiers
  diseaseId String         // OMIM:154700, ORPHA:558, etc.
  diseaseName String       // Nome da doença
  
  // HPO term
  hpoTermId String
  hpoTerm HPOTerm @relation(fields: [hpoTermId], references: [id])
  
  // Association details
  qualifier String?        // NOT para negações
  frequencyTerm String?    // Very frequent, Occasional, etc.
  frequencyHPO String?     // HP term para frequência
  onsetTerm String?        // Adult onset, Childhood onset, etc.
  onsetHPO String?         // HP term para onset
  
  // Evidence
  evidence String          // Evidence code (PCS, IEA, etc.)
  reference String?        // PMID ou outra referência
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([diseaseId, hpoTermId])
  @@map("hpo_disease_associations")
}
