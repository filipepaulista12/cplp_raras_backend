// =====================================================================================
// SCHEMA PRISMA COMPLETO ORPHANET - SISTEMA BRASILEIRO DE DOENÇAS RARAS
// =====================================================================================
// Baseado na estrutura completa do Orphanet (www.orphanet.org)
// Inclui todas as classificações, linearizações e mapeamentos
// =====================================================================================

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// =====================================================================================
// 1. NOMENCLATURA ORPHANET (Estrutura Base)
// =====================================================================================

model OrphaDisease {
  // Identificação Orphanet
  id                    String    @id @default(uuid())
  orphaNumber           String    @unique @map("orpha_number")       // Ex: "ORPHA:558"
  orphaCode             String    @unique @map("orpha_code")         // Ex: "558"
  
  // Nomes multilíngues
  preferredNameEn       String    @map("preferred_name_en")
  preferredNamePt       String?   @map("preferred_name_pt")
  synonymsEn            String?   // JSON array
  synonymsPt            String?   // JSON array
  
  // Classificação hierárquica
  parentId              String?   @map("parent_id")
  parent                OrphaDisease? @relation("DiseaseHierarchy", fields: [parentId], references: [id])
  children              OrphaDisease[] @relation("DiseaseHierarchy")
  
  // Tipo de entidade
  entityType            String    @map("entity_type")               // Disease, Group, Subtype, etc.
  classificationLevel   Int?      @map("classification_level")     // Nível na hierarquia
  
  // Status e datas
  dateCreated           String?   @map("date_created")
  dateModified          String?   @map("date_modified")
  expertLink            String?   @map("expert_link")
  isActiveDisease       Boolean   @default(true) @map("is_active_disease")
  isObsolete            Boolean   @default(false) @map("is_obsolete")
  
  // Five Star Data fields
  rdf_uri               String?   @map("rdf_uri")                  // URI RDF único
  jsonld_context        String?   @map("jsonld_context")          // Contexto JSON-LD
  
  // Metadata
  createdAt             DateTime  @default(now()) @map("created_at")
  updatedAt             DateTime  @updatedAt @map("updated_at")
  
  // Relacionamentos
  linearisations        OrphaLinearisation[]
  externalMappings      OrphaExternalMapping[]
  clinicalSigns         OrphaClinicalSign[]
  phenotypes            OrphaPhenotype[]
  genes                 OrphaGeneAssociation[]
  naturalHistory        OrphaNaturalHistory[]
  epidemiology          OrphaEpidemiology[]
  epidemiologyCPLP      OrphaCPLPEpidemiology[]
  drugAssociations      DrugDiseaseAssociation[] @relation("DrugAssociations")
  classifications       OrphaMedicalClassification[]
  textualInformation    OrphaTextualInformation[]
  hpoPhenotypeAssociations HPOPhenotypeAssociation[]
  
  @@map("orpha_diseases")
}

// =====================================================================================
// 2. LINEARIZAÇÃO ORPHANET (Classificação Clínica)
// =====================================================================================

model OrphaLinearisation {
  id                    String        @id @default(uuid())
  orphaDiseaseId        String        @map("orpha_disease_id")
  disease               OrphaDisease  @relation(fields: [orphaDiseaseId], references: [id], onDelete: Cascade)
  
  // Identificadores de linearização
  linearisationId       String        @map("linearisation_id")
  linearisationCode     String        @map("linearisation_code")
  
  // Hierarquia da linearização
  parentLinearisationId String?       @map("parent_linearisation_id")
  parent                OrphaLinearisation? @relation("LinearisationHierarchy", fields: [parentLinearisationId], references: [id])
  children              OrphaLinearisation[] @relation("LinearisationHierarchy")
  
  // Classificação
  preferredNameEn       String        @map("preferred_name_en")
  preferredNamePt       String?       @map("preferred_name_pt")
  classificationLevel   Int           @map("classification_level")
  
  // Tipo de classificação
  classificationType    String        @map("classification_type")    // Clinical, Etiological, etc.
  
  @@map("orpha_linearisations")
}

// =====================================================================================
// 3. MAPEAMENTOS EXTERNOS (ICD-10, ICD-11, OMIM, etc.)
// =====================================================================================

model OrphaExternalMapping {
  id                    String        @id @default(uuid())
  orphaDiseaseId        String        @map("orpha_disease_id")
  disease               OrphaDisease  @relation(fields: [orphaDiseaseId], references: [id], onDelete: Cascade)
  
  // Sistema de nomenclatura externa
  sourceSystem          String        @map("source_system")          // ICD10, ICD11, OMIM, UMLS, etc.
  sourceSystemVersion   String?       @map("source_system_version")
  
  // Códigos e mapeamentos
  sourceCode            String        @map("source_code")
  sourceName            String        @map("source_name")
  sourceNamePt          String?       @map("source_name_pt")          // Nome em português
  
  // Tipo de mapeamento
  mappingType           String        @map("mapping_type")           // Exact, Broader, Narrower, etc.
  mappingFlag           String?       @map("mapping_flag")           // NTBT, BTNT, etc.
  mappingApprovalStatus String?       @map("mapping_approval_status")
  
  // Metadados
  validationStatus      String?       @map("validation_status")
  lastUpdated           String?       @map("last_updated")
  
  @@map("orpha_external_mappings")
}

// =====================================================================================
// 4. CLASSIFICAÇÕES MÉDICAS POR ESPECIALIDADE
// =====================================================================================

model OrphaMedicalClassification {
  id                    String        @id @default(uuid())
  orphaDiseaseId        String        @map("orpha_disease_id")
  disease               OrphaDisease  @relation(fields: [orphaDiseaseId], references: [id], onDelete: Cascade)
  
  // Especialidade médica
  medicalSpecialty      String        @map("medical_specialty")      // Neurology, Cardiology, etc.
  medicalSpecialtyPt    String?       @map("medical_specialty_pt")   // Neurologia, Cardiologia, etc.
  specialtyCode         String?       @map("specialty_code")
  
  // Classificação na especialidade
  classificationName    String        @map("classification_name")
  classificationNamePt  String?       @map("classification_name_pt") // Nome em português
  classificationLevel   Int?          @map("classification_level")
  
  // Hierarquia na especialidade
  parentId              String?       @map("parent_id")
  parent                OrphaMedicalClassification? @relation("SpecialtyHierarchy", fields: [parentId], references: [id])
  children              OrphaMedicalClassification[] @relation("SpecialtyHierarchy")
  
  @@map("orpha_medical_classifications")
}

// =====================================================================================
// 5. FENÓTIPOS (HPO - Human Phenotype Ontology)
// =====================================================================================

model OrphaPhenotype {
  id                    String        @id @default(uuid())
  orphaDiseaseId        String        @map("orpha_disease_id")
  disease               OrphaDisease  @relation(fields: [orphaDiseaseId], references: [id], onDelete: Cascade)
  
  // Identificação HPO
  hpoId                 String        @map("hpo_id")                 // Ex: "HP:0000252"
  hpoTerm               String        @map("hpo_term")
  
  // Frequência do fenótipo
  frequencyHpoId        String?       @map("frequency_hpo_id")       // Ex: "HP:0040283"
  frequencyTerm         String?       @map("frequency_term")         // Ex: "Occasional"
  frequencyValue        String?       @map("frequency_value")        // Ex: "5-29%"
  
  // Critério diagnóstico
  diagnosticCriteria    String?       @map("diagnostic_criteria")    // Pathognomonic, Major, Minor
  
  @@map("orpha_phenotypes")
}

// =====================================================================================
// 6. SINAIS CLÍNICOS
// =====================================================================================

model OrphaClinicalSign {
  id                    String        @id @default(uuid())
  orphaDiseaseId        String        @map("orpha_disease_id")
  disease               OrphaDisease  @relation(fields: [orphaDiseaseId], references: [id], onDelete: Cascade)
  
  // Sinal clínico
  signName              String        @map("sign_name")
  signNamePt            String?       @map("sign_name_pt")
  
  // Frequência
  frequency             String?       // Obrigatório, Frequente, Ocasional, etc.
  frequencyValue        String?       @map("frequency_value")
  
  // Categoria do sinal
  signCategory          String?       @map("sign_category")
  
  @@map("orpha_clinical_signs")
}

// =====================================================================================
// 7. ASSOCIAÇÕES GENÉTICAS
// =====================================================================================

model OrphaGeneAssociation {
  id                    String        @id @default(uuid())
  orphaDiseaseId        String        @map("orpha_disease_id")
  disease               OrphaDisease  @relation(fields: [orphaDiseaseId], references: [id], onDelete: Cascade)
  
  // Identificação do gene
  geneSymbol            String        @map("gene_symbol")            // Ex: "CFTR"
  geneName              String?       @map("gene_name")
  geneNamePt            String?       @map("gene_name_pt")           // Nome do gene em português
  
  // IDs de referência
  hgncId                String?       @map("hgnc_id")
  entrezGeneId          String?       @map("entrez_gene_id")
  ensemblGeneId         String?       @map("ensembl_gene_id")
  omimGeneId            String?       @map("omim_gene_id")
  
  // Tipo de associação
  associationType       String        @map("association_type")       // Disease-causing, Major susceptibility, etc.
  associationTypePt     String?       @map("association_type_pt")    // Causador da doença, etc.
  associationStatus     String?       @map("association_status")
  
  // Herança
  inheritancePattern    String?       @map("inheritance_pattern")
  inheritancePatternPt  String?       @map("inheritance_pattern_pt") // Padrão de herança em PT
  
  @@map("orpha_gene_associations")
}

// =====================================================================================
// 8. HISTÓRIA NATURAL DA DOENÇA
// =====================================================================================

model OrphaNaturalHistory {
  id                    String        @id @default(uuid())
  orphaDiseaseId        String        @map("orpha_disease_id")
  disease               OrphaDisease  @relation(fields: [orphaDiseaseId], references: [id], onDelete: Cascade)
  
  // Idade de início
  ageOfOnset            String?       @map("age_of_onset")
  ageOfOnsetPt          String?       @map("age_of_onset_pt")        // Idade de início em PT
  ageOfOnsetHpoId       String?       @map("age_of_onset_hpo_id")
  
  // Idade de óbito
  ageOfDeath            String?       @map("age_of_death")
  ageOfDeathPt          String?       @map("age_of_death_pt")        // Idade de óbito em PT
  ageOfDeathHpoId       String?       @map("age_of_death_hpo_id")
  
  // Características
  lifeExpectancy        String?       @map("life_expectancy")
  lifeExpectancyPt      String?       @map("life_expectancy_pt")     // Expectativa de vida em PT
  prognosis             String?
  prognosisPt           String?       @map("prognosis_pt")           // Prognóstico em PT
  severity              String?
  severityPt            String?       @map("severity_pt")            // Gravidade em PT
  
  // Evolução
  courseOfDisease       String?       @map("course_of_disease")
  courseOfDiseasePt     String?       @map("course_of_disease_pt")   // Evolução da doença em PT
  
  @@map("orpha_natural_history")
}

// =====================================================================================
// 9. DADOS EPIDEMIOLÓGICOS
// =====================================================================================

model OrphaEpidemiology {
  id                    String        @id @default(uuid())
  orphaDiseaseId        String        @map("orpha_disease_id")
  disease               OrphaDisease  @relation(fields: [orphaDiseaseId], references: [id], onDelete: Cascade)
  
  // Prevalência
  prevalenceClass       String?       @map("prevalence_class")       // <1/1000000, 1-5/10000, etc.
  prevalenceClassPt     String?       @map("prevalence_class_pt")    // Classe de prevalência em PT
  prevalenceValue       String?       @map("prevalence_value")
  prevalenceType        String?       @map("prevalence_type")        // Point, Birth, etc.
  prevalenceTypePt      String?       @map("prevalence_type_pt")     // Tipo de prevalência em PT
  
  // População
  populationType        String?       @map("population_type")        // General population, Specific population
  populationTypePt      String?       @map("population_type_pt")     // Tipo de população em PT
  populationDescription String?       @map("population_description")
  populationDescriptionPt String?     @map("population_description_pt") // Descrição da população em PT
  
  // Localização geográfica
  geographicArea        String?       @map("geographic_area")
  geographicAreaPt      String?       @map("geographic_area_pt")     // Área geográfica em PT
  
  // Fonte dos dados
  dataSource            String?       @map("data_source")
  validationStatus      String?       @map("validation_status")
  
  @@map("orpha_epidemiology")
}

// =====================================================================================
// 10. INFORMAÇÕES TEXTUAIS (Definições, Descrições, etc.)
// =====================================================================================

model OrphaTextualInformation {
  id                    String        @id @default(uuid())
  orphaDiseaseId        String        @map("orpha_disease_id")
  disease               OrphaDisease  @relation(fields: [orphaDiseaseId], references: [id], onDelete: Cascade)
  
  // Tipo de texto
  textSection           String        @map("text_section")           // Definition, Description, etc.
  textSectionCode       String?       @map("text_section_code")
  
  // Conteúdo
  textEn                String?       @map("text_en")
  textPt                String?       @map("text_pt")
  
  // Metadados
  lastUpdate            String?       @map("last_update")
  validationStatus      String?       @map("validation_status")
  
  @@map("orpha_textual_information")
}

// =====================================================================================
// 11. DADOS ESPECÍFICOS PARA PAÍSES CPLP
// =====================================================================================

model CPLPCountry {
  id                    Int           @id @default(autoincrement())
  code                  String        @unique
  name                  String
  namePt                String        @map("name_pt")
  flagEmoji             String?       @map("flag_emoji")
  population            BigInt?
  language              String        @default("pt")
  
  // Sistema de saúde
  healthcareSystem      String?       @map("healthcare_system")
  rareDiseasePolicy     String?       @map("rare_disease_policy")
  orphanDrugPolicy      String?       @map("orphan_drug_policy")
  
  // Dados epidemiológicos locais
  epidemiologyData      OrphaCPLPEpidemiology[]
  
  createdAt             DateTime      @default(now()) @map("created_at")
  
  @@map("cplp_countries")
}

model OrphaCPLPEpidemiology {
  id                    String        @id @default(uuid())
  orphaDiseaseId        String        @map("orpha_disease_id")
  disease               OrphaDisease  @relation(fields: [orphaDiseaseId], references: [id], onDelete: Cascade)
  countryId             Int           @map("country_id")
  country               CPLPCountry   @relation(fields: [countryId], references: [id])
  
  // Dados epidemiológicos específicos do país
  estimatedCases        Int?          @map("estimated_cases")
  prevalencePer100k     Float?        @map("prevalence_per_100k")
  incidencePer100k      Float?        @map("incidence_per_100k")
  
  // Fonte e qualidade dos dados
  dataSource            String?       @map("data_source")
  dataQuality           String?       @map("data_quality")
  collectionYear        Int?          @map("collection_year")
  
  // Metadados
  notes                 String?
  createdAt             DateTime      @default(now()) @map("created_at")
  updatedAt             DateTime      @updatedAt @map("updated_at")
  
  @@map("orpha_cplp_epidemiology")
}

// =====================================================================================
// 12. SISTEMA DE AUDITORIA E LOGS
// =====================================================================================

model OrphaImportLog {
  id                    String        @id @default(uuid())
  
  // Dados da importação
  importType            String        @map("import_type")            // nomenclature, phenotypes, etc.
  sourceUrl             String?       @map("source_url")
  sourceFile            String?       @map("source_file")
  
  // Status da importação
  status                String        // pending, running, completed, failed
  recordsProcessed      Int?          @map("records_processed")
  recordsSucceeded      Int?          @map("records_succeeded")
  recordsFailed         Int?          @map("records_failed")
  
  // Detalhes
  errorMessages         String?       @map("error_messages")         // JSON array
  importSummary         String?       @map("import_summary")         // JSON object
  
  // Timestamps
  startedAt             DateTime?     @map("started_at")
  completedAt           DateTime?     @map("completed_at")
  createdAt             DateTime      @default(now()) @map("created_at")
  
  @@map("orpha_import_logs")
}

// =====================================================================================
// 13. HPO (HUMAN PHENOTYPE ONTOLOGY) INTEGRATION
// =====================================================================================

model HPOTerm {
  id String @id @default(cuid())
  
  // Identificadores HPO
  hpoId String @unique      // HP:0000001
  hpoCode String           // 0000001 (sem prefixo)
  
  // Names and descriptions
  name String              // Nome principal do termo HPO
  namePt String?           // Nome principal em português @map("name_pt")
  definition String?       // Definição do termo
  definitionPt String?     // Definição em português @map("definition_pt")
  comment String?          // Comentários adicionais
  commentPt String?        // Comentários em português @map("comment_pt")
  
  // Hierarquia
  parentTerms String?      // JSON array de termos pais
  childTerms String?       // JSON array de termos filhos
  
  // Sinônimos
  exactSynonyms String?    // JSON array de sinônimos exatos
  broadSynonyms String?    // JSON array de sinônimos amplos
  narrowSynonyms String?   // JSON array de sinônimos específicos
  relatedSynonyms String?  // JSON array de sinônimos relacionados
  
  // Metadata
  isObsolete Boolean @default(false)
  replacedBy String?       // HPO ID que substitui este termo
  
  // Cross-references
  xrefs String?           // JSON array de cross-references (UMLS, SNOMED, etc.)
  
  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relacionamentos
  phenotypeAssociations HPOPhenotypeAssociation[]
  geneAssociations HPOGeneAssociation[]
  diseaseAssociations HPODiseaseAssociation[]
  
  @@map("hpo_terms")
}

model HPOPhenotypeAssociation {
  id String @id @default(cuid())
  
  // Relacionamento com doença Orphanet
  orphaDiseaseId String
  orphaDisease OrphaDisease @relation(fields: [orphaDiseaseId], references: [id])
  
  // Relacionamento com termo HPO
  hpoTermId String
  hpoTerm HPOTerm @relation(fields: [hpoTermId], references: [id])
  
  // Frequência do fenótipo
  frequencyHPO String?     // HP:0040280 (Obligate), etc.
  frequencyTerm String?    // "Obligate", "Very frequent", etc.
  frequencyTermPt String?  @map("frequency_term_pt") // "Obrigatório", "Muito frequente", etc.
  frequencyNumeric Float?  // 0.8 = 80%
  
  // Onset age
  onsetHPO String?         // HP:0003577 (Congenital), etc.
  onsetTerm String?        // "Congenital onset", etc.
  onsetTermPt String?      @map("onset_term_pt") // "Início congênito", etc.
  
  // Clinical modifiers
  severity String?         // Mild, Moderate, Severe
  severityPt String?       @map("severity_pt") // Leve, Moderado, Grave
  clinicalModifiers String? // JSON array de modificadores
  
  // Evidence
  evidence String?         // PCS (Published clinical study), etc.
  reference String?        // PMID, DOI, etc.
  
  // Metadata
  frequency String?        // Frequência textual original
  qualifier String?        // NOT se for negação
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([orphaDiseaseId, hpoTermId])
  @@map("hpo_phenotype_associations")
}

model HPOGeneAssociation {
  id String @id @default(cuid())
  
  // Gene information
  geneSymbol String        // BRCA1, TP53, etc.
  geneId String?           // Entrez Gene ID
  ensemblId String?        // ENSG00000012048
  
  // HPO term
  hpoTermId String
  hpoTerm HPOTerm @relation(fields: [hpoTermId], references: [id])
  
  // Association details
  associationType String?  // "phenotype", "disease-gene", etc.
  evidence String?         // Evidence code
  reference String?        // Publication reference
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([geneSymbol, hpoTermId])
  @@map("hpo_gene_associations")
}

model HPODiseaseAssociation {
  id String @id @default(cuid())
  
  // Disease identifiers
  diseaseId String         // OMIM:154700, ORPHA:558, etc.
  diseaseName String       // Nome da doença
  diseaseNamePt String?    @map("disease_name_pt") // Nome da doença em português
  
  // HPO term
  hpoTermId String
  hpoTerm HPOTerm @relation(fields: [hpoTermId], references: [id])
  
  // Association details
  qualifier String?        // NOT para negações
  frequencyTerm String?    // Very frequent, Occasional, etc.
  frequencyTermPt String?  @map("frequency_term_pt") // Muito frequente, Ocasional, etc.
  frequencyHPO String?     // HP term para frequência
  onsetTerm String?        // Adult onset, Childhood onset, etc.
  onsetTermPt String?      @map("onset_term_pt") // Início adulto, Início na infância, etc.
  onsetHPO String?         // HP term para onset
  
  // Evidence
  evidence String          // Evidence code (PCS, IEA, etc.)
  reference String?        // PMID ou outra referência
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([diseaseId, hpoTermId])
  @@map("hpo_disease_associations")
}

// =====================================================================================
// 6. MEDICAMENTOS DRUGBANK - EXPANSÃO PARA FIVE STAR DATA
// =====================================================================================

model DrugBankDrug {
  // Identificação única
  id                    String    @id @default(uuid())
  drugbank_id           String    @unique @map("drugbank_id")       // Ex: "DB00001"
  
  // Informações básicas
  name                  String                                      // Nome comercial principal
  namePt                String?   @map("name_pt")                   // Nome comercial em português
  generic_name          String?   @map("generic_name")             // Nome genérico
  generic_name_pt       String?   @map("generic_name_pt")          // Nome genérico em português
  brand_names           String?   // JSON array com nomes comerciais
  
  // Classificação farmacológica
  drug_type             String?   @map("drug_type")                // small molecule, biotech, etc.
  indication            String?                                    // Indicações terapêuticas
  indication_pt         String?   @map("indication_pt")            // Indicações em português
  mechanism_action      String?   @map("mechanism_action")         // Mecanismo de ação
  mechanism_action_pt   String?   @map("mechanism_action_pt")      // Mecanismo de ação em português
  
  // Status regulatório
  approval_status       String?   @map("approval_status")          // approved, investigational, etc.
  approval_status_pt    String?   @map("approval_status_pt")       // aprovado, investigacional, etc.
  orphan_status         Boolean   @default(false) @map("orphan_status") // Se é medicamento órfão
  fda_approval_date     String?   @map("fda_approval_date")        // Data aprovação FDA
  
  // Propriedades químicas
  molecular_formula     String?   @map("molecular_formula")
  molecular_weight      Float?    @map("molecular_weight")
  smiles                String?                                    // Estrutura química SMILES
  inchi                 String?                                    // Estrutura química InChI
  
  // Farmacocinética
  absorption            String?                                    // Dados de absorção
  metabolism            String?                                    // Metabolismo
  excretion             String?                                    // Excreção
  half_life             String?   @map("half_life")                // Meia-vida
  
  // Categorias terapêuticas
  atc_codes             String?   @map("atc_codes")                // Códigos ATC (JSON array)
  therapeutic_class     String?   @map("therapeutic_class")
  therapeutic_class_pt  String?   @map("therapeutic_class_pt")    // Classe terapêutica em português
  pharmacological_class String?   @map("pharmacological_class")
  pharmacological_class_pt String? @map("pharmacological_class_pt") // Classe farmacológica em português
  
  // Descrições técnicas
  description           String?                                    // Descrição técnica
  description_pt        String?   @map("description_pt")           // Descrição técnica em português
  toxicity              String?                                    // Informações de toxicidade
  toxicity_pt           String?   @map("toxicity_pt")              // Toxicidade em português
  pharmacodynamics      String?                                    // Farmacodinâmica
  pharmacodynamics_pt   String?   @map("pharmacodynamics_pt")     // Farmacodinâmica em português
  
  // URLs e links externos
  drugbank_url          String?   @map("drugbank_url")
  pubchem_cid           String?   @map("pubchem_cid")
  chemspider_id         String?   @map("chemspider_id")
  
  // Metadados para Five Star Data
  rdf_uri               String?   @map("rdf_uri")                  // URI RDF único
  jsonld_context        String?   @map("jsonld_context")          // Contexto JSON-LD
  last_sync             DateTime? @map("last_sync")               // Última sincronização
  data_quality_score    Float?    @map("data_quality_score")      // Score qualidade dados
  
  // Timestamps
  createdAt            DateTime  @default(now()) @map("created_at")
  updatedAt            DateTime  @updatedAt @map("updated_at")
  
  // Relacionamentos
  interactions         DrugInteraction[] @relation("DrugInteractions")
  diseaseAssociations  DrugDiseaseAssociation[]
  
  @@map("drugbank_drugs")
}

// =====================================================================================
// 7. INTERAÇÕES MEDICAMENTOSAS - FIVE STAR DATA
// =====================================================================================

model DrugInteraction {
  // Identificação única
  id                   String    @id @default(uuid())
  
  // Medicamentos envolvidos
  drug1_id             String    @map("drug1_id")
  drug2_id             String    @map("drug2_id")
  drug1                DrugBankDrug @relation("DrugInteractions", fields: [drug1_id], references: [id])
  
  // Detalhes da interação
  interaction_type     String?   @map("interaction_type")          // major, moderate, minor
  interaction_type_pt  String?   @map("interaction_type_pt")       // principal, moderado, menor
  severity             String?                                     // high, medium, low
  severity_pt          String?   @map("severity_pt")               // alta, média, baixa
  description          String?                                     // Descrição da interação
  description_pt       String?   @map("description_pt")            // Descrição em português
  mechanism            String?                                     // Mecanismo da interação
  mechanism_pt         String?   @map("mechanism_pt")              // Mecanismo em português
  clinical_effect      String?   @map("clinical_effect")           // Efeito clínico
  clinical_effect_pt   String?   @map("clinical_effect_pt")        // Efeito clínico em português
  management           String?                                     // Como gerenciar a interação
  management_pt        String?   @map("management_pt")             // Manejo em português
  
  // Evidências científicas
  evidence_level       String?   @map("evidence_level")            // established, theoretical, etc.
  evidence_level_pt    String?   @map("evidence_level_pt")         // estabelecido, teórico, etc.
  references           String?                                     // Referências científicas (JSON)
  pmid_references      String?   @map("pmid_references")           // PubMed IDs (JSON array)
  
  // Dados clínicos
  frequency            String?                                     // Frequência da interação
  onset                String?                                     // Tempo de início
  documentation        String?                                     // Nível de documentação
  
  // Five Star Data
  rdf_uri              String?   @map("rdf_uri")
  jsonld_context       String?   @map("jsonld_context")
  
  // Metadados
  createdAt           DateTime  @default(now()) @map("created_at")
  updatedAt           DateTime  @updatedAt @map("updated_at")
  
  @@unique([drug1_id, drug2_id])
  @@map("drug_interactions")
}

// =====================================================================================
// 8. ASSOCIAÇÕES MEDICAMENTO-DOENÇA - FIVE STAR DATA
// =====================================================================================

model DrugDiseaseAssociation {
  // Identificação única
  id                   String    @id @default(uuid())
  
  // Relacionamentos
  drug_id              String    @map("drug_id")
  disease_id           String    @map("disease_id")
  drug                 DrugBankDrug @relation(fields: [drug_id], references: [id])
  disease              OrphaDisease @relation("DrugAssociations", fields: [disease_id], references: [id])
  
  // Tipo de associação
  association_type     String    @map("association_type")          // treats, causes, contraindicated, etc.
  association_type_pt  String?   @map("association_type_pt")       // trata, causa, contraindicado, etc.
  indication_type      String?   @map("indication_type")           // primary, secondary, off-label
  indication_type_pt   String?   @map("indication_type_pt")        // primária, secundária, off-label
  
  // Detalhes clínicos
  efficacy            String?                                      // Dados de eficácia
  efficacy_pt         String?   @map("efficacy_pt")                // Eficácia em português
  dosage              String?                                      // Posologia recomendada
  dosage_pt           String?   @map("dosage_pt")                  // Posologia em português
  administration      String?                                      // Via de administração
  administration_pt   String?   @map("administration_pt")          // Via de administração em português
  contraindications   String?                                      // Contraindicações
  contraindications_pt String?  @map("contraindications_pt")       // Contraindicações em português
  
  // Evidências científicas
  evidence_level      String?   @map("evidence_level")             // FDA approved, clinical trials, etc.
  evidence_level_pt   String?   @map("evidence_level_pt")          // aprovado pela FDA, ensaios clínicos, etc.
  clinical_trials     String?   @map("clinical_trials")           // Ensaios clínicos (JSON)
  pubmed_references   String?   @map("pubmed_references")         // Referências PubMed
  
  // Status regulatório
  approval_status     String?   @map("approval_status")           // approved, investigational
  approval_status_pt  String?   @map("approval_status_pt")        // aprovado, investigacional
  orphan_indication   Boolean   @default(false) @map("orphan_indication") // Indicação órfã
  fda_label          String?   @map("fda_label")                 // Label FDA
  
  // Five Star Data
  rdf_uri            String?   @map("rdf_uri")
  jsonld_context     String?   @map("jsonld_context")
  data_provenance    String?   @map("data_provenance")           // Origem dos dados
  
  // Metadados
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @updatedAt @map("updated_at")
  
  @@unique([drug_id, disease_id])
  @@map("drug_disease_associations")
}

// =====================================================================================
// 9. LOGS DE SINCRONIZAÇÃO FIVE STAR DATA
// =====================================================================================

model DataSyncLog {
  id              String    @id @default(uuid())
  data_type       String    @map("data_type")           // drugs, diseases, interactions
  sync_format     String    @map("sync_format")         // csv, json, rdf, jsonld
  source_system   String    @map("source_system")       // sqlite, api, file
  target_system   String    @map("target_system")       // csv, rdf, jsonld
  records_count   Int       @map("records_count")
  status          String                                // success, error, partial
  error_message   String?   @map("error_message")
  file_path       String?   @map("file_path")
  file_size       BigInt?   @map("file_size")
  checksum        String?                               // MD5 checksum
  
  // Timestamps
  started_at      DateTime  @map("started_at")
  completed_at    DateTime? @map("completed_at")
  createdAt       DateTime  @default(now()) @map("created_at")
  
  @@map("data_sync_logs")
}
