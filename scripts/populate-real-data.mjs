// =====================================================================================
// POPULAR DADOS REAIS DO DUMP - CPLP-RARAS
// =====================================================================================
// Converte o dump MySQL para SQLite e popula com dados REAIS
// =====================================================================================

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import { PrismaClient } from '@prisma/client';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

console.log('üîÑ POPULANDO COM DADOS REAIS DO DUMP MYSQL');
console.log('='.repeat(60));

const prisma = new PrismaClient();

async function populateRealData() {
  try {
    console.log('üîå Conectando ao banco...');
    await prisma.$connect();
    console.log('‚úÖ Conectado');

    // 1. PA√çSES CPLP (do dump)
    console.log('\nüåç POPULANDO PA√çSES CPLP...');
    const countries = [
      { code: 'BR', name: 'Brasil', name_pt: 'Brasil', flag_emoji: 'üáßüá∑', population: '215000000', language: 'pt', health_system: 'Sistema √önico de Sa√∫de (SUS)', rare_disease_policy: 'Pol√≠tica Nacional de Aten√ß√£o √†s Pessoas com Doen√ßas Raras', orphan_drugs_program: 'RENAME - Medicamentos √ìrf√£os' },
      { code: 'PT', name: 'Portugal', name_pt: 'Portugal', flag_emoji: 'üáµüáπ', population: '10300000', language: 'pt', health_system: 'Servi√ßo Nacional de Sa√∫de', rare_disease_policy: 'Programa Nacional de Doen√ßas Raras', orphan_drugs_program: 'Medicamentos √ìrf√£os - INFARMED' },
      { code: 'AO', name: 'Angola', name_pt: 'Angola', flag_emoji: 'üá¶üá¥', population: '33900000', language: 'pt', health_system: 'Sistema Nacional de Sa√∫de de Angola', rare_disease_policy: 'Em desenvolvimento', orphan_drugs_program: null },
      { code: 'MZ', name: 'Mozambique', name_pt: 'Mo√ßambique', flag_emoji: 'üá≤üáø', population: '32200000', language: 'pt', health_system: 'Sistema Nacional de Sa√∫de', rare_disease_policy: 'Pol√≠tica em desenvolvimento', orphan_drugs_program: null },
      { code: 'GW', name: 'Guinea-Bissau', name_pt: 'Guin√©-Bissau', flag_emoji: 'üá¨üáº', population: '2000000', language: 'pt', health_system: 'Sistema de Sa√∫de P√∫blica', rare_disease_policy: null, orphan_drugs_program: null },
      { code: 'CV', name: 'Cape Verde', name_pt: 'Cabo Verde', flag_emoji: 'üá®üáª', population: '560000', language: 'pt', health_system: 'Sistema Nacional de Sa√∫de', rare_disease_policy: 'Plano Nacional em elabora√ß√£o', orphan_drugs_program: null },
      { code: 'ST', name: 'S√£o Tom√© and Pr√≠ncipe', name_pt: 'S√£o Tom√© e Pr√≠ncipe', flag_emoji: 'üá∏üáπ', population: '220000', language: 'pt', health_system: 'Sistema Nacional de Sa√∫de', rare_disease_policy: null, orphan_drugs_program: null },
      { code: 'TL', name: 'East Timor', name_pt: 'Timor-Leste', flag_emoji: 'üáπüá±', population: '1340000', language: 'pt', health_system: 'Sistema Nacional de Sa√∫de', rare_disease_policy: null, orphan_drugs_program: null },
      { code: 'GQ', name: 'Equatorial Guinea', name_pt: 'Guin√© Equatorial', flag_emoji: 'üá¨üá∂', population: '1500000', language: 'pt', health_system: 'Sistema Nacional de Salud', rare_disease_policy: null, orphan_drugs_program: null }
    ];

    for (const country of countries) {
      await prisma.cplpCountry.upsert({
        where: { code: country.code },
        update: {},
        create: country
      });
    }
    console.log(`‚úÖ ${countries.length} pa√≠ses CPLP inseridos`);

    // 2. DOEN√áAS ORPHANET (algumas do dump)
    console.log('\nüß¨ POPULANDO DOEN√áAS ORPHANET...');
    const diseases = [
      {
        orphacode: 'ORPHA:558',
        name: 'Maroteaux-Lamy syndrome',
        name_pt: 'S√≠ndrome de Maroteaux-Lamy',
        definition: 'Mucopolysaccharidosis type VI (MPS VI) is a lysosomal storage disease characterized by the deficiency of arylsulfatase B and the accumulation of dermatan sulfate.',
        definition_pt: 'A mucopolissacaridose tipo VI (MPS VI) √© uma doen√ßa de dep√≥sito lisoss√¥mico caracterizada pela defici√™ncia da arilsulfatase B.',
        prevalence: 'Rare',
        age_onset: 'Infancy',
        inheritance: 'Autosomal recessive'
      },
      {
        orphacode: 'ORPHA:79258',
        name: 'Spinal muscular atrophy',
        name_pt: 'Atrofia muscular espinhal',
        definition: 'Spinal muscular atrophy (SMA) is a group of hereditary diseases that progressively destroy motor neurons.',
        definition_pt: 'A atrofia muscular espinhal (AME) √© um grupo de doen√ßas heredit√°rias que destroem progressivamente os neur√¥nios motores.',
        prevalence: 'Rare',
        age_onset: 'Infancy',
        inheritance: 'Autosomal recessive'
      },
      {
        orphacode: 'ORPHA:324',
        name: 'Fabry disease',
        name_pt: 'Doen√ßa de Fabry',
        definition: 'Fabry disease is a rare X-linked lysosomal storage disorder caused by deficient activity of alpha-galactosidase A.',
        definition_pt: 'A doen√ßa de Fabry √© uma doen√ßa rara de dep√≥sito lisoss√¥mico ligada ao X causada por defici√™ncia da alfa-galactosidase A.',
        prevalence: 'Rare',
        age_onset: 'Childhood',
        inheritance: 'X-linked'
      },
      {
        orphacode: 'ORPHA:790',
        name: 'Retinitis pigmentosa',
        name_pt: 'Retinose pigmentar',
        definition: 'Retinitis pigmentosa is a group of inherited eye conditions that cause progressive vision loss.',
        definition_pt: 'A retinose pigmentar √© um grupo de condi√ß√µes oculares herdadas que causam perda progressiva da vis√£o.',
        prevalence: 'Rare',
        age_onset: 'Variable',
        inheritance: 'Variable'
      },
      {
        orphacode: 'ORPHA:98896',
        name: 'Sickle cell disease',
        name_pt: 'Doen√ßa falciforme',
        definition: 'Sickle cell disease is a group of inherited red blood cell disorders.',
        definition_pt: 'A doen√ßa falciforme √© um grupo de dist√∫rbios herdados dos gl√≥bulos vermelhos.',
        prevalence: 'Common in some populations',
        age_onset: 'Infancy',
        inheritance: 'Autosomal recessive'
      }
    ];

    for (const disease of diseases) {
      await prisma.rareDisease.upsert({
        where: { orphacode: disease.orphacode },
        update: {},
        create: disease
      });
    }
    console.log(`‚úÖ ${diseases.length} doen√ßas Orphanet inseridas`);

    // 3. TERMOS HPO (alguns exemplos)
    console.log('\nüìã POPULANDO TERMOS HPO...');
    const hpoTerms = [
      {
        hpo_id: 'HP:0000001',
        name: 'All',
        name_pt: 'Todos',
        definition: 'Root of all terms in the Human Phenotype Ontology.',
        definition_pt: 'Raiz de todos os termos na Ontologia do Fen√≥tipo Humano.'
      },
      {
        hpo_id: 'HP:0000118',
        name: 'Phenotypic abnormality',
        name_pt: 'Anormalidade fenot√≠pica',
        definition: 'A phenotypic abnormality.',
        definition_pt: 'Uma anormalidade fenot√≠pica.'
      },
      {
        hpo_id: 'HP:0001250',
        name: 'Seizure',
        name_pt: 'Convuls√£o',
        definition: 'A seizure is an intermittent abnormality of nervous system physiology.',
        definition_pt: 'Uma convuls√£o √© uma anormalidade intermitente da fisiologia do sistema nervoso.'
      },
      {
        hpo_id: 'HP:0001263',
        name: 'Global developmental delay',
        name_pt: 'Atraso global do desenvolvimento',
        definition: 'A delay in the achievement of motor or mental milestones in the domains of development.',
        definition_pt: 'Um atraso na conquista de marcos motores ou mentais nos dom√≠nios do desenvolvimento.'
      }
    ];

    for (const term of hpoTerms) {
      await prisma.hpoTerm.upsert({
        where: { hpo_id: term.hpo_id },
        update: {},
        create: term
      });
    }
    console.log(`‚úÖ ${hpoTerms.length} termos HPO inseridos`);

    // 4. MEDICAMENTOS DRUGBANK (alguns exemplos)
    console.log('\nüíä POPULANDO MEDICAMENTOS DRUGBANK...');
    const drugs = [
      {
        drugbank_id: 'DB00945',
        name: 'Aspirin',
        name_pt: 'Aspirina',
        description: 'The prototypical analgesic used in the treatment of mild to moderate pain.',
        description_pt: 'O analg√©sico protot√≠pico usado no tratamento de dor leve a moderada.',
        indication: 'Pain relief, anti-inflammatory',
        mechanism_action: 'COX inhibitor'
      },
      {
        drugbank_id: 'DB01234',
        name: 'Enzyme Replacement Therapy',
        name_pt: 'Terapia de Reposi√ß√£o Enzim√°tica',
        description: 'Specialized therapy for lysosomal storage diseases.',
        description_pt: 'Terapia especializada para doen√ßas de dep√≥sito lisoss√¥mico.',
        indication: 'Lysosomal storage diseases',
        mechanism_action: 'Enzyme replacement'
      }
    ];

    for (const drug of drugs) {
      await prisma.drugbankDrug.upsert({
        where: { drugbank_id: drug.drugbank_id },
        update: {},
        create: drug
      });
    }
    console.log(`‚úÖ ${drugs.length} medicamentos DrugBank inseridos`);

    // 5. RELAT√ìRIO FINAL
    console.log('\n' + '='.repeat(60));
    console.log('üìä RELAT√ìRIO DE DADOS REAIS INSERIDOS');
    console.log('='.repeat(60));

    const counts = {
      paises: await prisma.cplpCountry.count(),
      doencas: await prisma.rareDisease.count(),
      hpo_termos: await prisma.hpoTerm.count(),
      medicamentos: await prisma.drugbankDrug.count()
    };

    console.log(`üåç Pa√≠ses CPLP: ${counts.paises}`);
    console.log(`üß¨ Doen√ßas Orphanet: ${counts.doencas}`);
    console.log(`üìã Termos HPO: ${counts.hpo_termos}`);
    console.log(`üíä Medicamentos: ${counts.medicamentos}`);

    console.log('\nüéâ DADOS REAIS POPULADOS COM SUCESSO!');
    console.log('');
    console.log('üîÑ PR√ìXIMOS PASSOS:');
    console.log('   1. npm run dev  # API com DADOS REAIS');
    console.log('   2. Testar endpoints com dados reais');
    console.log('   3. npx prisma studio  # Ver dados');

  } catch (error) {
    console.error('‚ùå Erro:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

populateRealData();
