const { PrismaClient } = require('@prisma/client');

console.log('üîß CONFIGURA√á√ÉO E TESTE DO PRISMA');
console.log('‚ïê'.repeat(50));

const prisma = new PrismaClient();

async function testPrisma() {
    try {
        console.log('\nüîó Testando conex√£o Prisma...');
        
        // Verificar se consegue conectar
        await prisma.$connect();
        console.log('‚úÖ Conex√£o Prisma estabelecida');

        console.log('\nüìä VERIFICANDO TABELAS:');
        console.log('‚îÄ'.repeat(30));

        // Verificar tabelas existentes
        const tables = await prisma.$queryRaw`
            SELECT name FROM sqlite_master WHERE type='table' AND name NOT LIKE 'sqlite_%' AND name != '_prisma_migrations'
        `;
        
        console.log(`üìã Tabelas encontradas: ${tables.length}`);
        tables.forEach((table, index) => {
            console.log(`   ${index + 1}. ${table.name}`);
        });

        console.log('\nüåç POPULANDO DADOS CPLP:');
        console.log('‚îÄ'.repeat(30));

        // Dados dos pa√≠ses CPLP
        const paisesCPLP = [
            {
                code: 'BR',
                name: 'Brasil',
                name_pt: 'Brasil',
                flag_emoji: 'üáßüá∑',
                population: '215000000',
                language: 'pt',
                health_system: 'Sistema √önico de Sa√∫de (SUS)',
                rare_disease_policy: 'Pol√≠tica Nacional de Aten√ß√£o √†s Pessoas com Doen√ßas Raras',
                orphan_drugs_program: 'RENAME - Medicamentos √ìrf√£os'
            },
            {
                code: 'PT',
                name: 'Portugal',
                name_pt: 'Portugal',
                flag_emoji: 'üáµüáπ',
                population: '10300000',
                language: 'pt',
                health_system: 'Servi√ßo Nacional de Sa√∫de (SNS)',
                rare_disease_policy: 'Programa Nacional de Doen√ßas Raras',
                orphan_drugs_program: 'Medicamentos √ìrf√£os - INFARMED'
            },
            {
                code: 'AO',
                name: 'Angola',
                name_pt: 'Angola',
                flag_emoji: 'üá¶üá¥',
                population: '33900000',
                language: 'pt',
                health_system: 'Sistema Nacional de Sa√∫de de Angola',
                rare_disease_policy: 'Em desenvolvimento',
                orphan_drugs_program: null
            },
            {
                code: 'MZ',
                name: 'Mo√ßambique',
                name_pt: 'Mo√ßambique',
                flag_emoji: 'üá≤üáø',
                population: '32200000',
                language: 'pt',
                health_system: 'Servi√ßo Nacional de Sa√∫de de Mo√ßambique',
                rare_disease_policy: 'Em desenvolvimento',
                orphan_drugs_program: null
            },
            {
                code: 'CV',
                name: 'Cabo Verde',
                name_pt: 'Cabo Verde',
                flag_emoji: 'üá®üáª',
                population: '560000',
                language: 'pt',
                health_system: 'Servi√ßo Nacional de Sa√∫de de Cabo Verde',
                rare_disease_policy: 'Em desenvolvimento',
                orphan_drugs_program: null
            },
            {
                code: 'GW',
                name: 'Guin√©-Bissau',
                name_pt: 'Guin√©-Bissau',
                flag_emoji: 'üá¨üáº',
                population: '2000000',
                language: 'pt',
                health_system: 'Sistema Nacional de Sa√∫de da Guin√©-Bissau',
                rare_disease_policy: 'Em desenvolvimento',
                orphan_drugs_program: null
            },
            {
                code: 'ST',
                name: 'S√£o Tom√© e Pr√≠ncipe',
                name_pt: 'S√£o Tom√© e Pr√≠ncipe',
                flag_emoji: 'üá∏üáπ',
                population: '220000',
                language: 'pt',
                health_system: 'Servi√ßo Nacional de Sa√∫de de STP',
                rare_disease_policy: 'Em desenvolvimento',
                orphan_drugs_program: null
            },
            {
                code: 'TL',
                name: 'Timor-Leste',
                name_pt: 'Timor-Leste',
                flag_emoji: 'üáπüá±',
                population: '1300000',
                language: 'pt',
                health_system: 'Sistema Nacional de Sa√∫de de Timor-Leste',
                rare_disease_policy: 'Em desenvolvimento',
                orphan_drugs_program: null
            },
            {
                code: 'GQ',
                name: 'Guin√© Equatorial',
                name_pt: 'Guin√© Equatorial',
                flag_emoji: 'üá¨üá∂',
                population: '1500000',
                language: 'pt',
                health_system: 'Sistema de Sa√∫de da Guin√© Equatorial',
                rare_disease_policy: 'Em desenvolvimento',
                orphan_drugs_program: null
            }
        ];

        // Inserir pa√≠ses usando Prisma
        console.log('üìù Inserindo pa√≠ses CPLP...');
        for (const pais of paisesCPLP) {
            try {
                const paisCriado = await prisma.cplpCountry.upsert({
                    where: { code: pais.code },
                    update: pais,
                    create: pais
                });
                
                console.log(`‚úÖ ${pais.flag_emoji} ${pais.name}: ${parseInt(pais.population).toLocaleString()} hab`);
            } catch (error) {
                console.log(`‚ùå Erro ao inserir ${pais.name}: ${error.message}`);
            }
        }

        console.log('\nüìä VERIFICANDO DADOS INSERIDOS:');
        console.log('‚îÄ'.repeat(35));

        // Verificar dados inseridos
        const totalPaises = await prisma.cplpCountry.count();
        console.log(`üìã Total de pa√≠ses: ${totalPaises}`);

        const paises = await prisma.cplpCountry.findMany({
            orderBy: { population: 'desc' }
        });

        console.log('\nüåç PA√çSES CPLP CADASTRADOS:');
        console.log('‚îÄ'.repeat(30));
        
        let populacaoTotal = 0;
        paises.forEach((pais, index) => {
            const pop = parseInt(pais.population);
            populacaoTotal += pop;
            console.log(`   ${index + 1}. ${pais.flag_emoji} ${pais.name}: ${pop.toLocaleString()} hab`);
        });

        console.log(`\nüåê Popula√ß√£o total CPLP: ${populacaoTotal.toLocaleString()} habitantes`);

        console.log('\nüß¨ ADICIONANDO DADOS CIENT√çFICOS B√ÅSICOS:');
        console.log('‚îÄ'.repeat(45));

        // HPO Terms b√°sicos
        const hpoTermsBasicos = [
            {
                hpo_id: 'HP:0000001',
                name: 'All',
                definition: 'Root of all terms in the Human Phenotype Ontology.',
                is_obsolete: false
            },
            {
                hpo_id: 'HP:0000118',
                name: 'Phenotypic abnormality',
                definition: 'A phenotypic abnormality.',
                is_obsolete: false
            },
            {
                hpo_id: 'HP:0001507',
                name: 'Growth abnormality',
                definition: 'A deviation from the normal rate of growth.',
                is_obsolete: false
            }
        ];

        console.log('üß¨ Inserindo HPO Terms...');
        for (const termo of hpoTermsBasicos) {
            try {
                await prisma.hpoTerm.upsert({
                    where: { hpo_id: termo.hpo_id },
                    update: termo,
                    create: termo
                });
                console.log(`‚úÖ HPO: ${termo.hpo_id} - ${termo.name}`);
            } catch (error) {
                console.log(`‚ùå Erro HPO ${termo.hpo_id}: ${error.message}`);
            }
        }

        // Doen√ßas Orphanet b√°sicas
        const orphaDiseasesBasicas = [
            {
                orpha_code: 'ORPHA:558',
                name: 'Marfan syndrome',
                definition: 'A systemic disorder of connective tissue characterized by abnormalities of the eyes, skeleton, and cardiovascular system.',
                prevalence: 'Rare'
            },
            {
                orpha_code: 'ORPHA:773',
                name: 'Neurofibromatosis type 1',
                definition: 'A tumor predisposition syndrome characterized by the development of neurofibromas.',
                prevalence: 'Uncommon'
            }
        ];

        console.log('üî¨ Inserindo Orphanet Diseases...');
        for (const doenca of orphaDiseasesBasicas) {
            try {
                await prisma.orphaDisease.upsert({
                    where: { orpha_code: doenca.orpha_code },
                    update: doenca,
                    create: doenca
                });
                console.log(`‚úÖ Orphanet: ${doenca.orpha_code} - ${doenca.name}`);
            } catch (error) {
                console.log(`‚ùå Erro Orphanet ${doenca.orpha_code}: ${error.message}`);
            }
        }

        console.log('\nüéâ PRISMA CONFIGURADO COM SUCESSO!');
        console.log('‚ïê'.repeat(50));
        console.log('‚úÖ Cliente Prisma gerado');
        console.log('‚úÖ Schema aplicado √† database');
        console.log('‚úÖ Dados CPLP inseridos');
        console.log('‚úÖ Dados cient√≠ficos b√°sicos adicionados');
        console.log('üåê Prisma Studio rodando em: http://localhost:5555');
        
        console.log('\nüìã PR√ìXIMOS COMANDOS:');
        console.log('‚îÄ'.repeat(25));
        console.log('‚Ä¢ npm start              # Iniciar APIs NestJS');
        console.log('‚Ä¢ npx prisma studio      # Abrir interface visual');
        console.log('‚Ä¢ npm run prisma:studio  # Comando alternativo');

    } catch (error) {
        console.error('‚ùå Erro no Prisma:', error.message);
    } finally {
        await prisma.$disconnect();
        console.log('üîê Conex√£o Prisma fechada');
    }
}

testPrisma();
