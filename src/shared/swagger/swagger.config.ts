/**
 * Configura√ß√£o centralizada do Swagger/OpenAPI para CPLP-Raras Backend
 * Sistema de documenta√ß√£o autom√°tica para APIs de doen√ßas raras
 */

import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import { INestApplication } from '@nestjs/common';

export class SwaggerConfig {
  /**
   * Configura√ß√£o principal do Swagger
   */
  static createDocument(app: INestApplication) {
    const config = new DocumentBuilder()
      .setTitle('CPLP-Raras API')
      .setDescription(`
        API completa para pesquisa de doen√ßas raras nos pa√≠ses de l√≠ngua portuguesa.
        
        ## Funcionalidades Principais:
        - üî¨ **Diseases**: Consulta unificada de doen√ßas raras
        - üß¨ **Orphanet**: Base de dados europeia de doen√ßas raras  
        - üìä **HPO**: Ontologia de fen√≥tipos humanos
        - üíä **DrugBank**: Base de dados de medicamentos
        - üåç **CPLP**: Dados espec√≠ficos dos pa√≠ses lus√≥fonos
        
        ## Padr√µes Open Data (5 estrelas):
        - ‚≠ê Dados dispon√≠veis na web com licen√ßa aberta
        - ‚≠ê‚≠ê Dados estruturados e leg√≠veis por m√°quina
        - ‚≠ê‚≠ê‚≠ê Formato n√£o-propriet√°rio (JSON)
        - ‚≠ê‚≠ê‚≠ê‚≠ê URIs para identificar recursos
        - ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê Dados linkados para descoberta
      `)
      .setVersion('1.0.0')
      .setContact(
        'Equipe CPLP-Raras',
        'https://raras-cplp.org',
        'contato@raras-cplp.org'
      )
      .setLicense(
        'MIT License',
        'https://opensource.org/licenses/MIT'
      )
      .addServer('http://localhost:3001', 'Servidor de Desenvolvimento')
      .addServer('https://api.raras-cplp.org', 'Servidor de Produ√ß√£o')
      .addTag('diseases', 'Consultas unificadas de doen√ßas raras')
      .addTag('orphanet', 'Base de dados Orphanet Europa')
      .addTag('hpo', 'Ontologia de Fen√≥tipos Humanos')
      .addTag('drugbank', 'Base de dados de medicamentos')
      .addTag('cplp', 'Dados espec√≠ficos CPLP')
      .addTag('system', 'Status e informa√ß√µes do sistema')
      .addBearerAuth(
        {
          type: 'http',
          scheme: 'bearer',
          bearerFormat: 'JWT',
          description: 'Token JWT para autentica√ß√£o (futuro)'
        },
        'access-token'
      )
      .build();

    const document = SwaggerModule.createDocument(app, config);
    SwaggerModule.setup('api', app, document, {
      customSiteTitle: 'CPLP-Raras API Documentation',
      customfavIcon: '/favicon.ico',
      customCss: `
        .swagger-ui .topbar { background-color: #1e40af; }
        .swagger-ui .topbar-wrapper .link { color: white; }
        .swagger-ui .info .title { color: #1e40af; }
        .swagger-ui .scheme-container { background: #f8fafc; }
      `,
      swaggerOptions: {
        persistAuthorization: true,
        displayRequestDuration: true,
        filter: true,
        showExtensions: true,
        showCommonExtensions: true,
      },
    });

    return document;
  }

  /**
   * Configura√ß√µes espec√≠ficas por ambiente
   */
  static getEnvironmentConfig() {
    const env = process.env.NODE_ENV || 'development';
    
    return {
      development: {
        enabled: true,
        path: 'api',
        title: 'CPLP-Raras API (Development)',
      },
      production: {
        enabled: process.env.SWAGGER_ENABLED === 'true',
        path: 'docs',
        title: 'CPLP-Raras API (Production)',
      },
      test: {
        enabled: false,
        path: 'api-test',
        title: 'CPLP-Raras API (Test)',
      }
    }[env];
  }
}
