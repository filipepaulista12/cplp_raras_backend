# üê≥ CONFIGURA√á√ÉO MySQL LOCAL VIA DOCKER

Write-Host "üê≥ CONFIGURA√á√ÉO MySQL LOCAL VIA DOCKER" -ForegroundColor Cyan
Write-Host "‚ïê" * 50 -ForegroundColor Cyan

# Verificar se Docker est√° dispon√≠vel
Write-Host "`nüîç VERIFICANDO DOCKER:" -ForegroundColor Yellow
try {
    $dockerVersion = docker --version
    Write-Host "‚úÖ Docker encontrado: $dockerVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker n√£o encontrado" -ForegroundColor Red
    Write-Host "üí° Instale Docker Desktop: https://desktop.docker.com/win/main/amd64/Docker%20Desktop%20Installer.exe" -ForegroundColor Yellow
    exit 1
}

# Parar e remover container MySQL existente se houver
Write-Host "`nüßπ LIMPANDO CONTAINERS EXISTENTES:" -ForegroundColor Yellow
try {
    docker stop mysql-cplp 2>$null
    docker rm mysql-cplp 2>$null
    Write-Host "‚úÖ Container anterior removido" -ForegroundColor Green
} catch {
    Write-Host "‚ÑπÔ∏è  Nenhum container anterior encontrado" -ForegroundColor Blue
}

# Criar container MySQL
Write-Host "`nüöÄ CRIANDO CONTAINER MySQL:" -ForegroundColor Yellow
$mysqlPassword = "IamSexyAndIKnowIt#2025(*)"

$dockerCommand = @"
docker run --name mysql-cplp ``
  -e MYSQL_ROOT_PASSWORD='$mysqlPassword' ``
  -e MYSQL_DATABASE=cplp_raras ``
  -e MYSQL_USER=cplp_user ``
  -e MYSQL_PASSWORD=cplp_2025 ``
  -p 3306:3306 ``
  -v mysql-cplp-data:/var/lib/mysql ``
  -d mysql:8.0
"@

try {
    Write-Host "üîß Executando: docker run mysql:8.0..." -ForegroundColor Blue
    $containerId = Invoke-Expression $dockerCommand
    Write-Host "‚úÖ Container criado: $containerId" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erro ao criar container: $_" -ForegroundColor Red
    exit 1
}

# Aguardar MySQL inicializar
Write-Host "`n‚è≥ AGUARDANDO MySQL INICIALIZAR:" -ForegroundColor Yellow
Write-Host "üîÑ Aguardando 30 segundos..." -ForegroundColor Blue

for ($i = 30; $i -gt 0; $i--) {
    Write-Host "‚è±Ô∏è  $i segundos restantes..." -ForegroundColor Gray
    Start-Sleep 1
}

# Verificar se MySQL est√° rodando
Write-Host "`nüîç VERIFICANDO STATUS:" -ForegroundColor Yellow
try {
    $status = docker ps --filter "name=mysql-cplp" --format "table {{.Names}}`t{{.Status}}"
    Write-Host $status -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erro ao verificar status" -ForegroundColor Red
}

# Testar conex√£o
Write-Host "`nüîó TESTANDO CONEX√ÉO:" -ForegroundColor Yellow
try {
    $testResult = docker exec mysql-cplp mysql -u root -p"$mysqlPassword" -e "SELECT VERSION();"
    Write-Host "‚úÖ MySQL respondendo:" -ForegroundColor Green
    Write-Host $testResult -ForegroundColor White
} catch {
    Write-Host "‚ùå Erro na conex√£o: $_" -ForegroundColor Red
    Write-Host "üí° Tente aguardar mais alguns segundos e testar novamente" -ForegroundColor Yellow
}

# Verificar database
Write-Host "`nüìä VERIFICANDO DATABASE:" -ForegroundColor Yellow
try {
    $dbResult = docker exec mysql-cplp mysql -u root -p"$mysqlPassword" -e "SHOW DATABASES;"
    Write-Host "‚úÖ Databases dispon√≠veis:" -ForegroundColor Green
    Write-Host $dbResult -ForegroundColor White
} catch {
    Write-Host "‚ùå Erro ao verificar databases: $_" -ForegroundColor Red
}

Write-Host "`nüéØ PR√ìXIMOS PASSOS:" -ForegroundColor Cyan
Write-Host "‚ïê" * 30 -ForegroundColor Cyan
Write-Host "1Ô∏è‚É£  Importar backup: docker exec -i mysql-cplp mysql -u root -p`"$mysqlPassword`" cplp_raras < database/backup_cplp_raras_20250908.sql" -ForegroundColor White
Write-Host "2Ô∏è‚É£  Testar conex√£o: docker exec -it mysql-cplp mysql -u root -p" -ForegroundColor White
Write-Host "3Ô∏è‚É£  Verificar dados: docker exec mysql-cplp mysql -u root -p`"$mysqlPassword`" -e `"USE cplp_raras; SHOW TABLES;`"" -ForegroundColor White

Write-Host "`n‚ú® CONFIGURA√á√ÉO DOCKER CONCLU√çDA!" -ForegroundColor Green
Write-Host "üê≥ Container: mysql-cplp" -ForegroundColor White
Write-Host "üîå Porta: 3306" -ForegroundColor White
Write-Host "üë§ Usu√°rio: root" -ForegroundColor White
Write-Host "üîë Senha: $mysqlPassword" -ForegroundColor White
Write-Host "üóÑÔ∏è  Database: cplp_raras" -ForegroundColor White
