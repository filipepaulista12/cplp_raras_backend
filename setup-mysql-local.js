const mysql = require('mysql2/promise');

console.log('üîß CONFIGURA√á√ÉO E TESTE DO MySQL LOCAL');
console.log('‚ïê'.repeat(50));

async function setupMySQLLocal() {
    let connection = null;

    try {
        console.log('üîó Testando conex√£o com MySQL local...');
        
        // Configura√ß√£o de conex√£o
        const config = {
            host: 'localhost',
            user: 'root',
            password: 'IamSexyAndIKnowIt#2025(*)',
            port: 3306
        };

        // Conectar sem especificar database primeiro
        connection = await mysql.createConnection(config);
        console.log('‚úÖ Conectado ao MySQL local');

        // Verificar vers√£o
        const [version] = await connection.execute('SELECT VERSION() as version');
        console.log(`üìä Vers√£o MySQL: ${version[0].version}`);

        // Criar database se n√£o existir
        console.log('\nüóÑÔ∏è  Criando/verificando database...');
        await connection.execute('CREATE DATABASE IF NOT EXISTS cplp_raras');
        console.log('‚úÖ Database cplp_raras criado/verificado');

        // Verificar databases
        const [databases] = await connection.execute('SHOW DATABASES');
        console.log(`üìã Databases dispon√≠veis: ${databases.length}`);
        databases.forEach(db => {
            const dbName = Object.values(db)[0];
            if (dbName === 'cplp_raras') {
                console.log(`   ‚úÖ ${dbName} (nossa database)`);
            } else {
                console.log(`   ‚Ä¢ ${dbName}`);
            }
        });

        // Conectar √† database espec√≠fica
        await connection.changeUser({ database: 'cplp_raras' });
        console.log('‚úÖ Conectado √† database cplp_raras');

        // Verificar tabelas existentes
        const [tables] = await connection.execute('SHOW TABLES');
        console.log(`\nüìä Tabelas existentes: ${tables.length}`);
        
        if (tables.length > 0) {
            console.log('üìã Tabelas encontradas:');
            for (const table of tables) {
                const tableName = Object.values(table)[0];
                const [count] = await connection.execute(`SELECT COUNT(*) as count FROM ${tableName}`);
                console.log(`   ‚Ä¢ ${tableName}: ${count[0].count} registros`);
            }
        } else {
            console.log('üìã Nenhuma tabela encontrada - pronto para importar backup');
        }

        console.log('\n‚úÖ MySQL LOCAL CONFIGURADO E PRONTO!');
        console.log('üöÄ Pr√≥ximo passo: Importar backup completo');

    } catch (error) {
        console.error('‚ùå Erro na configura√ß√£o MySQL:', error.message);
        
        if (error.code === 'ECONNREFUSED') {
            console.log('\nüí° SOLU√á√ïES:');
            console.log('   1. Verificar se MySQL est√° rodando: Get-Service MySQL80');
            console.log('   2. Iniciar servi√ßo: Start-Service MySQL80');
            console.log('   3. Verificar porta 3306: netstat -an | findstr 3306');
        } else if (error.code === 'ER_ACCESS_DENIED_ERROR') {
            console.log('\nüí° SOLU√á√ïES:');
            console.log('   1. Verificar senha do root');
            console.log('   2. Usar mysql -u root -p para testar manualmente');
        }
    } finally {
        if (connection) {
            await connection.end();
            console.log('üîê Conex√£o MySQL fechada');
        }
    }
}

setupMySQLLocal();
