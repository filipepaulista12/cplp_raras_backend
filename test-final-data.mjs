import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function testData() {
    console.log('üî• TESTANDO DADOS REAIS DO BANCO SQLite...');
    
    try {
        // Testar pa√≠ses
        const countries = await prisma.cplpCountry.findMany();
        console.log(`\nüìç PA√çSES CPLP: ${countries.length}`);
        countries.forEach(country => {
            console.log(`  ‚Ä¢ ${country.name} (${country.code}) - ${country.population} habitantes`);
        });
        
        // Testar doen√ßas
        const diseases = await prisma.rareDisease.findMany();
        console.log(`\nü¶† DOEN√áAS RARAS: ${diseases.length}`);
        diseases.forEach(disease => {
            console.log(`  ‚Ä¢ ${disease.name_pt || disease.name} (ORPHA: ${disease.orphacode})`);
        });
        
        console.log(`\nüéâ TESTE CONCLU√çDO COM SUCESSO!
        
        ‚úÖ Dados REAIS do MySQL importados e funcionando
        ‚úÖ SQLite com ${countries.length} pa√≠ses e ${diseases.length} doen√ßas
        ‚úÖ Pronto para produ√ß√£o!`);
        
    } catch (error) {
        console.error('‚ùå ERRO NO TESTE:', error);
    } finally {
        await prisma.$disconnect();
    }
}

testData();
